# Windows PowerShell 
[WinEventLog://Microsoft-Windows-PowerShell/Operational]
disabled = 0
renderXml = 1
source = XmlWinEventLog:Microsoft-Windows-PowerShell/Operational
sourcetype = powershell:eventlog
# We only care about EventCode=4104, ScriptBlock logging. 
# Module (4103) and invocation logging(4105,4106) 
# doesn't really provide anything for surviellance, they are however good for forensics
# so I recommend leaving them turned on in GPO/registry. But only collect them into splunk as needed.  
whitelist  = 4104
# Blacklisting noisy and useless scriptblocks
# Navigation and prompt related commands, as well as scriptblocks consisting of only numbers. 
blacklist1 = $XmlRegex = "<Data Name='ScriptBlockText'>(Clear\-Host|cls|clear|cd|cd \.\.|dir|ls|prompt|\d+|\$global\:\?|{\$_})</Data>"
# Execution Policy prompts etc.
blacklist2 = $XmlRegex = "<Data Name='ScriptBlockText'>{ Set\-StrictMode \-Version \d; (\$_\.ErrorCategory_Message|\$_\.OriginInfo|\$_\.PSMessageDetails|\$this\.Exception\.InnerException\.PSMessageDetails|\$this\.DisplayHint) }</Data>"
blacklist3 = $XmlRegex = "<Data Name='ScriptBlockText'>if((Get-ExecutionPolicy ) -ne 'AllSigned') { Set\-ExecutionPolicy \-Scope Process Bypass }; \& '[\w\:\\]+\.ps1'</Data>"
# Ignore splunks own powershell scripts.
blacklist4 = $XmlRegex = "<Data Name='Path'>C\:\\Program Files\\SplunkUniversalForwarder\\bin\\.*?\.ps1</Data>"
# Ignore module definitions for modules that are installed for local system. 
# otherwise we get a TON of events anytime a user types any command that uses any builtin not-loaded-by-default module
# A user simply typing "Get-NetFirewallRule" generates dozens of events when the PSDs are loaded for example
blacklist5 = $XmlRegex = "<Data Name='Path'>(C\:\\Program Files\\WindowsPowerShell\\Modules\\.*?\.psd1|C\:\\Windows\\System32\\WindowsPowerShell\\v1\.0\\Modules\\.*?\.psd1)</Data>"

# Transcript logs
[monitor://c:\windows\logs\powershell]
disabled = 1
sourcetype = powershell:transcript
multiline_event_extra_waittime = true
time_before_close = 300

# PowerShell Core
[WinEventLog://PowerShellCore/Operational]
disabled = 1
renderXml = 1
source = XmlWinEventLog:Microsoft-Windows-PowerShellCore/Operational
sourcetype = powershell:eventlog

# WSMAN/WinRM Logs
[WinEventLog://Microsoft-Windows-WinRM/Operational]
disabled = 0
renderXml = 1
source = XmlWinEventLog:Microsoft-Windows-WinRM/Operational
sourcetype = powershell:winrm
# Only gather incoming session established events and outbound connection attempts
whitelist = 91,6


